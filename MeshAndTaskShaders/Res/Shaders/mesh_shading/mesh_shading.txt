#version 460

#extension GL_EXT_mesh_shader : require
#extension GL_EXT_debug_printf : enable

layout(local_size_x = 3, local_size_y = 1, local_size_z = 1) in;
layout(triangles) out;
layout(max_vertices=4, max_primitives=2) out;

layout (binding = 0) uniform MatrixBuffer {
    mat4 model;
    mat4 view;
    mat4 proj;
} matBuffer;

struct s_vertex {
    vec4 position;
    vec4 color;
};

layout (std430, set = 1, binding = 0) buffer VertexBuffer {
    s_vertex vertices[];
} vertexBuffer;


struct s_meshlet {
    uint indices[6];
    uint vertices[4];
    uint vertexCount;
    uint indexCount;
};

layout (std430, set = 1, binding = 1) buffer MeshletBuffer {
     s_meshlet meshlets[];
} meshletBuffer;

layout (location = 0) out vec4 v_Color[]; 

vec4 m_CubeVerticesFloats[8] = {
    vec4(-1, -1, -1, 1),
    vec4(1, -1, -1, 1),
    vec4(1, 1, -1, 1),
    vec4(-1, 1, -1, 1),

    vec4(-1, -1, 1, 1),
    vec4(1, -1, 1, 1),
    vec4(1, 1, 1, 1),
    vec4(-1, 1, 1, 1),
};

s_meshlet debugMeshlets[6] = {
    s_meshlet(uint[6](0, 1, 2, 2, 3, 0), uint[4](0, 1, 2, 3), 4, 6),
    s_meshlet(uint[6](1, 5, 6, 6, 2, 1), uint[4](1, 5, 6, 2), 4, 6),
    s_meshlet(uint[6](5, 4, 7, 7, 6, 5), uint[4](5, 4, 7, 6), 4, 6),
    s_meshlet(uint[6](4, 0, 3, 3, 7, 4), uint[4](4, 0, 3, 4), 4, 6),
    s_meshlet(uint[6](1, 0, 4, 4, 5, 1), uint[4](1, 0, 4, 5), 4, 6),
    s_meshlet(uint[6](2, 6, 7, 7, 3, 2), uint[4](2, 6, 7, 3), 4, 6),
};

// vec4 vert_colors[32] = {
//     vec4(1.0, 0.0, 0.0, 1.0)
//     vec4(0.0, 1.0, 0.0, 0.0)
//     vec4(0.0, 0.0, 1.0, 1.0)
//     vec4(1.0, 1.0, 1.0, 1.0)
//                        
//     vec4(1.0, 0.0, 0.0, 1.0)
//     vec4(0.0, 1.0, 0.0, 1.0)
//     vec4(0.0, 0.0, 1.0, 1.0)
//     vec4(1.0, 1.0, 1.0, 1.0)
// }
//
// uint m_CubeIndices[24] = {
//     0, 1, 2, 2, 3, 0, // Front
//     1, 5, 6, 6, 2, 1, // Right
//     5, 4, 7, 7, 6, 5, // Back
//     4, 0, 3, 3, 7, 4, // Left
//     1, 0, 4, 4, 5, 1, // Bottom
//     2, 6, 7, 7, 3, 2, // Top
// };


void main()
{
    SetMeshOutputsEXT(64, 126);

    uint workGroupId = gl_WorkGroupID.x;

    // debugPrintfEXT("\n");

    vec4 pos;

    for (uint i = 0; i < 4; i++) {
        uint vert = debugMeshlets[workGroupId].vertices[i];
        // debugPrintfEXT("Vertex %d Untransformed: %1.2v4f\n", vert, vertexBuffer.vertices[vert].position);
        
        pos = matBuffer.proj * matBuffer.view * vertexBuffer.vertices[vert].position; 
        // debugPrintfEXT("Vertex %d Transformed: %1.2v4f\n", vert, pos);

        gl_MeshVerticesEXT[i].gl_Position = pos;

        v_Color[i] = vertexBuffer.vertices[vert].color;
    }

    uint indexCount = debugMeshlets[workGroupId].indexCount;

    for (uint i = 0; i < uint(indexCount) / 3; i++)
    {
        gl_PrimitiveTriangleIndicesEXT[i] = uvec3(
            debugMeshlets[workGroupId].indices[i * 3],
            debugMeshlets[workGroupId].indices[i * 3 + 1],
            debugMeshlets[workGroupId].indices[i * 3 + 2]
        );
    }


}
